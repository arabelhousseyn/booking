name: booking

on:
  push:
    branches: [ "develop","master"]
  pull_request:
    branches: [ "develop","master" ]

jobs:
  tests:

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.merged }}
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Setup Node.js
      uses: actions/setup-node@v2-beta
      with:
        node-version: '18'
        check-latest: true
    - name: Install NPM dependencies
      run: npm install
    - name: Compile assets for production
      run: npm run build
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  deploy-to-development:
    name: Deploy To Development Server
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest

    environment:
      name: development
      url: 18.196.212.37

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # Install deployer version 7, to be replaced later.
      - name: Install deployer
        run: |
          curl -LO https://github.com/deployphp/deployer/releases/download/v7.0.0-rc.7/deployer.phar
          mv deployer.phar /usr/local/bin/dep
          chmod +x /usr/local/bin/dep
      # Make sure the @v0.4.1 matches the current version of the
      # action
      - name: Setup SSH KEYS
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_DEV_PRIVATE_KEY }}

      # The steps below include a workaround to fake the hosts IP addresses
      # using Github secrets.
      - name: Setup SSH KNOWN_HOSTS
        run: |
          sudo echo "${{ secrets.SSH_DEV_IP }} ${{ secrets.SSH_DEV_DOMAIN }}" | sudo tee -a /etc/hosts
          sudo ssh-keyscan -H ${{ secrets.SSH_DEV_DOMAIN }} > $HOME/.ssh/known_hosts

      # Deploy code to development server
      # using laravel-deployer https://github.com/lorisleiva/laravel-deployer.
      - name: Deploy
        run: |
          dep deploy development
          dep npm:run:build
